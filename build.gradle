buildscript {
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.10.RELEASE")
        classpath("io.spring.gradle:propdeps-plugin:0.0.9.RELEASE")
    }
}

plugins {
    id "org.flywaydb.flyway" version "5.0.7"
}

group 'com.thanethomson'
version '0.1.0'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'
apply plugin: 'propdeps'
apply plugin: 'propdeps-idea'

sourceCompatibility = 1.8

repositories {
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

configurations {
    // we'll use Jetty, thank you very much
    compile.exclude module: "spring-boot-starter-tomcat"
    // remove the version number from the generated JAR, so we don't need to supply a
    // build arg to Docker when building the Docker image
    jar.archiveName = "lifetracker.jar"
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("commons-io:commons-io:2.6")
    compile("com.google.guava:guava:24.0-jre")
    compile("org.apache.commons:commons-lang3:3.7")
    compile("org.projectlombok:lombok:1.16.20")
    compile("com.zaxxer:HikariCP:2.7.8")
    compile("org.postgresql:postgresql:42.2.1")

    testCompile("org.springframework.boot:spring-boot-starter-test")

    optional("org.springframework.boot:spring-boot-configuration-processor")
}

compileJava.dependsOn(processResources)

bootRun {
    systemProperties System.properties
}

test {
    systemProperties System.properties
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}
